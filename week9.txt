<!DOCTYPE html>
<html>
    <head>
        <meta charset="utf-8">
        <title>LightCamera</title>
        <script src="three.js-dev/build/three.js"></script>
</head>
 <body>
        <canvas id="Canvas"></canvas>
        <script>
        var renderer =new THREE.WebGLRenderer({
            canvas: document.getElementById('Canvas'), 
            antialias: true
        });
        renderer.setClearColor(0x333333);
        renderer.setPixelRatio(window.devicePixelRatio);
        renderer.setSize(window.innerWidth, window.innerHeight);
 
        renderer.shadowMap.enabled = true;
        renderer.shadowMap.type = THREE.PCFSoftShadowMap;

        //перспективна камера
        var camera=new THREE.PerspectiveCamera(35,window.innerWidth / window.innerHeight, 0.1, 
            20000);
        camera.position.z = 500;
        
        //ортографічна камера
        
        var scene = new THREE.Scene();
        
        var conegeometry = new THREE.CylinderGeometry(100,200,100,500);
        var conematerial = new THREE.MeshLambertMaterial();
        var conemesh = new THREE.Mesh(conegeometry, conematerial);
        
         conemesh.position.set(-150, -50, -500);
        conemesh.rotation.x = -100;
        
         scene.add(conemesh);

        var cubegeometry = new THREE.BoxGeometry(90, 100, 90);
        var cubematerial = new THREE.MeshLambertMaterial();
        var cubemesh = new THREE.Mesh(cubegeometry, cubematerial);
        
        cubemesh.position.set(200, -50, -500);
        cubemesh.rotation.x = -100;
 
        scene.add(cubemesh);
 
        var planegeometry = new THREE.PlaneGeometry(900, 500, 300, 900);
        var planematerial = new THREE.MeshPhongMaterial({color: 0x333333});
        var planemesh = new THREE.Mesh(planegeometry, planematerial);
        
        planemesh.position.set(50, -70, -500);
        planemesh.rotation.set(-290, 0, 0);
 
        scene.add(planemesh);

        //рівномірне освітлення
        var lightOne = new THREE.AmbientLight(0xfffff, 0.5);
        lightOne.position.z = 300;
        scene.add(lightOne);

        //точкове освітлення
        var lightOne = new THREE.PointLight(0xfffff, 0.5);
        scene.add(lightOne);
        
        //точкове освітлення
        
        //напрямлене освітлення
        
        //var lightOne = new THREE.DirectionalLight(0xffff, 0.5);//, 1000);
        //lightOne.target = conemesh;
        //scene.add(lightOne);
        //прожекторне освітлення
        
        var lightOne = new THREE.SpotLight(0xfffff, 0.5, 1000);
        lightOne.target = conemesh;
        scene.add(lightOne);
        //напівсферичне освітлення
        
        //var lightOne = new THREE.HemisphereLight(0xfffff, 0x080820, 1);
        //scene.add(lightOne);
        
        //відкидання тіней
        
        var lightOne = new THREE.SpotLight(0xfffff, 2.0, 3000);
        lightOne.position.x = 50;
        lightOne.target = conemesh;
        lightOne.castShadow = true;

        scene.add(lightOne);

        //lightOne.shadow = new THREE.SpotLightShadow();
        

        var angle=0;
        
        function render() {
            //lightOne.intensity = (Math.cos(angle)+1)/2;
            lightOne.position.y=300*Math.cos(angle);
            lightOne.position.z=300*Math.sin(angle);//-500;
            //angle+=0,1;
            renderer.render(scene, camera);
            requestAnimationFrame(render);
        }
        requestAnimationFrame(render);
 
        </script>
    </body>
</html>